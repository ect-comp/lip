---
title: "Funções e Matrizes"
title-slide-attributes:
  data-background-image: ../../assets/img/brasao_ufrn_positivo.png
  data-background-size: "50%, auto, contain"
  data-background-opacity: "0.05"
---

## Nas Aulas Anteriores

- Vetores
- Funções com vetores
---

## Objetivo da Aula

Introduzir o uso de matrizes:

- Declaração de matrizes
- Inicialização de matrizes
- Funções e matrizes
- Exercícios
---

## Declarando uma Matriz
#### Sintaxe

```C++
tipo_da_matriz nome_da_matriz[n_linhas][n_colunas];
```

- `tipo_da_matriz` são os tipos de variáveis conhecidos:
  `int, char, float, bool`.
- `nome_da_matriz` segue as mesmas regras que usamos para variáveis
- `n_linhas` é uma expressão para o número de linhas da matriz
  cujo tipo deve ser `int`
- `n_colunas` é uma expressão para o número de colunas da matriz
  cujo tipo deve ser `int`
---

## Declarando uma Matriz
#### Exercício

Escrever declaração de matriz:

1. Do tipo real e tamanho `2` x `2`, chamada `A`
2. Do tipo caractere e tamanho `10` x `10`, chamada `img`
3. Do tipo inteiro e tamanho `nl` x `nc`, chamada `mat`
---

## Declarando uma Matriz
#### Exercício: Solução

```C++
1. float A[2][2];
2. char img[10][10];
3. int mat[nl][nc];
```
---

## Posições de uma Matriz
#### Acesso a Elementos de Matrizes

- Uma matriz com `nl` linhas e `nc` colunas:
    - Tem índices de linhas válidos que vão de `0` até `nl-1`
    - Tem índices de colunas válidos que vão de `0` até `nc-1`
- Uma matriz `m` não pode ser usada diretamente em expressões
    - Cada elemento `m[0][0],m[0][1]`, ..., `m[nl-1][nc-1]` é que deve ser usado
---

## Posições de uma Matriz
#### Acesso a Elementos de Matrizes

Para acessar cada elemento da matriz `m`:

- O primeiro índice acessa a linha da matriz
- O segundo índice acessa a coluna da matriz
- Exemplo: `m[2][0]` acessa a terceira linha e primeira coluna
---

## Posições de uma Matriz
#### Percorrendo uma Matriz

Para acessar cada elemento de uma matriz de forma automática, é necessário
iterar todas as colunas de todas as linhas da matriz. Ou seja:

- Um `for` para variar o índice da linha
- Um `for` para variar o índice da coluna
- Os laços devem estar aninhados
- A ordem dos laços pode ou não influenciar no resultado, dependendo do
  uso final do laço no algoritmo
---

## Posições de uma Matriz
#### Exercício: Leitura de Dados

Implemente um programa que leia do usuário as dimensões de uma matriz
de inteiros e que leia também cada um de seus elementos.

Imprima a matriz no formato adequado na tela.
---

## Posições de uma Matriz
#### Exercício: Solução

```C++
int main(){
    int nl, nc;
    cin >> nl >> nc;
    int m[nl][nc], i, j;
    for(i = 0; i < nl; i++){
        for(j = 0; j < nc; j++){
            cin >> m[i][j];
        }
    }

    for(i = 0; i < nl; i++){
        for(j = 0; j < nc; j++){
            cout << m[i][j] << " ";
        }
        cout << endl;
    }
}
```
---

## Inicialização de Matrizes

Forma 1:

```C++
int m[3][4] = { {1,2,3,4},
                {5,6,7,8},
                {9,10,11,12} };
```

Forma 2:

```C++
int m[][4] = { {1,2,3,4},
               {5,6,7,8},
               {9,10,11,12} };
```

---

## Inicialização de Matrizes

Forma 3:

```C++
int m[3][4] = {1,2,3,4,
               5,6,7,8,
               9,10,11,12};
```

Forma 4:

```C++
int m[][4] = {1,2,3,4,
              5,6,7,8,
              9,10,11,12};
```

---

## Lista de Presença

![](bit.ly_lip_20240718.png){fig-align="center"}

<a href="https://bit.ly/lip_20240718"><p style="text-align:center;">https://bit.ly/lip_20240718</p></a>

---

## Funções e Matrizes

- É possível passar matrizes como parâmetro de funções
- É necessário passar também outros dois parâmetros, relativos ao número de linhas e colunas da matriz
---

## Função com Matrizes
#### Matrizes para Uso em Funções

Em C++, para trabalhar com matrizes como parâmetros de funções, também é preciso:

1. A declaração de uma constante global com o número máximo de linhas/colunas de uma matriz (constante `MAX`, inicializada com um número grande)
2. Que todas as matrizes do programa sejam declaradas com esta constante no número de linhas e colunas
3. Informar na assinatura da função que cada matriz passada como parâmetro tem
`MAX` colunas
---

## Função com Matrizes
#### Matrizes para Uso em Funções

- Isto acontece por causa de uma limitação da linguagem C++, que exige que o número de colunas de uma matriz passada como parâmetro seja constante
- Os programas implementados podem não usar todas as `MAX` linhas e `MAX` colunas das matrizes
---

## Função com Matrizes
#### Matrizes para Uso em Funções - Função `main`

O programa declara matriz com tamanho máximo 100 x 100, mas usa
`nl` x `nc` elementos

```C++
const int MAX = 100;
int main(){
    int mat[MAX][MAX], nl, nc, i, j;
    cin >> nl >> nc;

    for(i = 0; i < nl; i++){
        for(j = 0; j < nc; j++){
            cin >> mat[i][j];
        }
    }

    for(i = 0; i < nl; i++){
        for(j = 0; j < nc; j++){
            cout << mat[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}
```
---

## Função com Matrizes

A linha

`const int MAX = 100;`

é equivalente a

`#define MAX 100`
---

## Declaração de Função com Matrizes
#### Sintaxe

Exemplo com uma matriz como parâmetro:
```C++
tipo_func nome_func(tipo_matriz nome_matriz[][MAX],
                    int n_linhas, int n_cols){
    corpo da funcao
}
```
---

## Declaração de Função com Matrizes
#### Sintaxe

- `tipo_matriz` é o tipo da matriz passada como parâmetro:<br>
  `int, char, float, bool`.
- `nome_matriz` é o nome da matriz passada como parâmetro. Observe que o
  primeiro `[]` é em branco e o segundo `[]` deve ter
  obrigatoriamente o nr. máximo de colunas (no caso, `MAX`)
- `n_linhas` é número de linhas da matriz
- `n_cols` é número de colunas da matriz
---

## Declaração de Função com Matrizes

Caso haja mais de uma matriz, é necessário utilizar parâmetros que indiquem o número de linhas e colunas de cada uma delas

---

## Declaração de Função com Matrizes
#### Exercícios

Escrever assinatura da função:

1. Que imprime uma matriz de inteiros na tela
2. Que recebe uma matriz de caracteres e retorna quantos dos elementos na matriz são iguais a um caractere passado como parâmetro
3. Que recebe duas matrizes de inteiros de mesmo tamanho e retorna o maior valor dentre todos, seja ele da primeira ou da segunda matriz
---

## Declaração de Funções com Matrizes
#### Exercícios: Solução

```C++
void imprime_matriz(int mat[][MAX], int nl, int nc);
int conta_ocorrencias(char mat[][MAX], int nl, int nc,
                      char c);
int computa_maior(int mat1[][MAX], int mat2[][MAX],
                  int nl, int nc);
```
---

## Funções com Matrizes
#### Chamada de Funções

Nas chamadas às funções, matrizes são passadas
como parâmetros utilizando apenas o seu nome (sem colchetes).

Exemplo:
```C++
const int MAX = 100;
void imprime_mat(int mat[][MAX], int nl, int nc);
int main(){
    int m[MAX][MAX], i, j, nl = 2, nc = 4;
    for(i = 0; i < nl; i++){
        for(j = 0; j < nc; j++){
        m[i][j] = nc*i+j+1;
        }
    }
    imprime_mat(m, nl, nc);
    return 0;
}
```
---

## Funções com Matrizes
#### Passagem de Parâmetros

- Toda matriz passada para funções como parâmetro
  é passada por **referência**
- Isto significa que as alterações realizadas nas
  matrizes se tornam visíveis fora do corpo da função
---

## Funções com Matrizes
#### Linhas de uma Matriz como Vetores

Funções que aceitam um vetor como parâmetro
aceitam que uma linha da matriz seja passada na sua chamada.
Exemplo:

```C++
void imprime_vet(int v[], int n);
...
void imprime_mat(int mat[][MAX], int nl, int nc){
    int i = 0;
    for(i = 0; i < nl; i++){
        imprime_vet(mat[i], nc);
    }
}
```
---

## Exercícios

Implemente as definições das funções:

1. Que imprime uma matriz de inteiros na tela
2. Que recebe uma matriz de caracteres e retorna quantos dos elementos na matriz são iguais a um caractere passado como parâmetro
3. Que recebe duas matrizes de inteiros de mesmo tamanho e retorna o maior valor dentre todos, seja ele da primeira ou da segunda matriz
---

## Sumário

Na aula de hoje:

- Sintaxe de implementação de funções com matrizes
- Exercícios